set bell-style none
# mappings for Ctrl-left-arrow and Ctrl-right-arrow for word moving
"\e[1;5C": forward-word
"\e[1;5D": backward-word

#set editing-mode vi #maybe better than full on command vi?
# Use Vi, not Emacs, style editing
set editing-mode vi

# Show all completions as soon as I press tab, even if there's more than one
set show-all-if-ambiguous on
# do not Ignore case
set completion-ignore-case off

# on menu-complete, first display the common prefix, then cycle through the 
# options when hitting TAB
set menu-complete-display-prefix off

###########################################################
# Keymaps for when we're in command mode (e.g., after hitting ESC)
set keymap vi-command

# Insert the arguments from the last command
"p": "i !!*\r"


# When hitting option-up/option-down, cycle through the previous commands
# which start with the prefix you've entered, rather than just cycling through
# the last entered commands.
# In OS X's Terminal.app preferences, I have 'Use option as meta key' off, and
# have mapped "option cursor up" to "\033\033[A" and "option cursor down" to 
# "\033\033[B".
# Feel free to bind to whatever you want. Delete the first '\e' in the keymap
# to set plain up/down to do a history search by default.
"\e[A": history-search-backward
"\e[B": history-search-forward

#needed for muscle memory  home end move to begin/end of line in both insert and command mode
"\e[1~": beginning-of-line
"\e[4~": end-of-line

###########################################################
# Keymaps for when we're in insert (i.e., typing stuff in) mode
set keymap vi-insert

# Pressing tab will list all completions & select the first one. Pressing it 
# again will cycle through available completions.
#TAB: menu-complete
TAB: complete
# Shift-TAB cycles completions backward
#"\e[Z": menu-complete-backward
##to turn off i don't think i need this
"\e[Z": complete-backward

# for Ctrl+l clear screen
"\C-l":'clear\n'

#needed for muscle memory
"\C-a": beginning-of-line
"\C-e": end-of-line 
"\e[1~": beginning-of-line
"\e[4~": end-of-line


#bind -m vi -q edit-and-execute-command to find whether a command is bound in given mode
#http://superuser.com/questions/736368/im-using-bash-in-vi-mode-whats-the-hotkey-sequence-to-edit-the-current-comm?rq=1
#bind -m vi-insert '"\C-x\C-e": edit-and-execute-command'
set keymap vi-insert
"\C-x\C-e": edit-and-execute-command


# Option-up/option-down should also apply to insert mode
"\e[A": history-search-backward
"\e[B": history-search-forward

# Needed because binding 'p' in command mode above wipes its insert mode
# function, too. This fixes that, and will insert 'p' when you type 'p'.
"p": self-insert
"b": self-insert
